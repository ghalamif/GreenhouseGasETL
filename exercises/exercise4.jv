
pipeline TmpPipeline {
    TMPExtractor 
    -> ZipArchiveInterpreter
    -> TMPFilePicker
    -> TMPTextFileInterpreter
    -> TMPCSVInterpreter 
    -> TMPDataSelector
    -> coldeleter
    -> ChangedHeaders
    -> TMPTableInterpreter
    -> CelsiusToFahrenheitTransformer1
    -> CelsiusToFahrenheitTransformer2
    -> TMPLoader
    ;
    


    block TMPExtractor oftype HttpExtractor { 
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip"; 
    }

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block TMPFilePicker oftype FilePicker {
        path: "/data.csv";
    }
    
    block TMPTextFileInterpreter oftype TextFileInterpreter { encoding: "latin2"; }
    
    block TMPDataSelector oftype CellRangeSelector {
        select: range A1:J*;
    }

    block coldeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I];
    }

    block TMPCSVInterpreter oftype CSVInterpreter { 
        delimiter: ';'; 
    }

    block ChangedHeaders oftype CellWriter {
        at: range A1:F1;
        write: ["id", "producer", "model", "month", "temperature", "battery_temperature"];
    }

    block TMPTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype IDRange,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype integer,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal

        ];
    }
    
    block CelsiusToFahrenheitTransformer1 oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: 'temperature';
        use: CelsiusToFahrenheit;
    }

    block CelsiusToFahrenheitTransformer2 oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: 'battery_temperature';
        use: CelsiusToFahrenheit;
    }
    
    block TMPLoader oftype SQLiteLoader { 
        table: "temperatures"; 
        file: "./temperatures.sqlite"; 
    }
}

transform CelsiusToFahrenheit {
    from tempCelsius oftype decimal;
    to tempFahrenheit oftype decimal;

    tempFahrenheit: (tempCelsius * 9/5) + 32;
}


constraint IDRangeContraint on integer:
    value >= 1 ;

valuetype IDRange oftype integer {
    constraints: [IDRangeContraint];
}

