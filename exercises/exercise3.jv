
pipeline GoodsTransportedPipeline {
    GoodsTransportedExtractor -> GoodsTransportedTextFileInterpreter
    -> textselector
    -> GoodsTransportedCSVInterpreter 
    //-> SelectData
    -> DeleteCol
    -> GoodsTransportedTableInterpreter
    -> GoodsTransportedLoader
    ;
    
    block GoodsTransportedExtractor oftype HttpExtractor { 
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv"; 
    }
    
    block GoodsTransportedTextFileInterpreter oftype TextFileInterpreter { encoding: "latin2";  }
    
    /* block SelectData oftype CellRangeSelector {
        select: range A9:AU41336;
    }*/

    block textselector oftype TextRangeSelector {
        lineFrom: 8;
        lineTo: 41336;
    }

    block DeleteCol oftype ColumnDeleter {
        delete: [
        column F, column G, column H, column I, column J, column K, column L, column M, column N, column O, column P, column Q, column R, column S, column T, column U, column V, column W, column X, column Y, column Z,
        column AA, column AB,column AC,column AD,column AE,column AF,column AG,column AH,column AI,column AJ,column AK,column AL,column AM,column AN,column AO,column AP,column AQ,column AR,column AS];
    }
    
    block GoodsTransportedCSVInterpreter oftype CSVInterpreter { 
        delimiter: ';'; 
    }

    block GoodsTransportedTableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "year" oftype integer,
            "month" oftype GermanMonth,
            "goods_id" oftype IDRegex,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype positive,
            "total" oftype positive
        ];
    }
    
    block GoodsTransportedLoader oftype SQLiteLoader { 
        table: "goods"; 
        file: "./goodsTransportedByTrain.sqlite"; 
    }
}

valuetype positive oftype integer {
    constraints: [ PositiveConstraint ];
}

constraint PositiveConstraint oftype RangeConstraint {
    lowerBound: 1;
    upperBoundInclusive: false;
}

constraint GermanMonthConstraint oftype AllowlistConstraint {
    allowlist: [
        "Januar", "Februar", "MÃ¤rz", "April",
        "Mai", "Juni", "Juli", "August",
        "September", "Oktober", "November", "Dezember"];
}

valuetype GermanMonth oftype text {
    constraints: [GermanMonthConstraint];
}

constraint IDRegexConstraint oftype RegexConstraint {
    regex: /^(NST7-)([A-Z0-9]{3})$/;
}

valuetype IDRegex oftype text {
    constraints: [IDRegexConstraint];
}