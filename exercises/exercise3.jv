// 1. Pipeline GoodsTransport
pipeline GoodsTransportPipeline {

    GoodsTransportExtractor -> GoodsTransportTextFileInterpreter;

    GoodsTransportTextFileInterpreter
        -> GoodsTransportTextRangeSelector
        -> GoodsTransportCSVInterpreter
        -> GoodsTransportHeaderWriterAtoE
        -> GoodsTransportHeaderWriterATtoAU
        -> GoodsTransportTableInterpreter
        -> GoodsTransportLoader;

    // 2. Extract file from url
    block GoodsTransportExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    // 3. Interpret File as Text File with encoding latin-3
    block GoodsTransportTextFileInterpreter oftype TextFileInterpreter {
        encoding: "latin3";
     }

    // 4. Remove metadata rows (data rows start from 9-41336, 8 replaced with header)
    block GoodsTransportTextRangeSelector oftype TextRangeSelector{
        lineFrom:8;
        lineTo:41336;
    }

    // 5. Interpret CSV input and output as a Sheet with delimiter ;
    block GoodsTransportCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    // 6.1 Write header from A to E ;
    block GoodsTransportHeaderWriterAtoE oftype CellWriter {
        at: range A1:E1;
        write: ['year', 'month', 'goods_id', 'goods_name', 'goods_source'];
    }
    
    // 6.2 Write header from AT to AU ;
    block GoodsTransportHeaderWriterATtoAU oftype CellWriter {
        at: range AT1:AU1;
        write: ['abroad', 'total'];
    }

    // 7. Define type of values
    valuetype PosInteger oftype integer{
        constraints: [ RangePosInteger];
    }

    constraint RangePosInteger oftype RangeConstraint{
        lowerBound: 0;
        lowerBoundInclusive: false;
    }

    valuetype GermanMonth oftype text{
        constraints: [ListGermanMonth];
    }

    constraint ListGermanMonth oftype AllowlistConstraint {
        allowlist: ["Januar","Februar","MÃ¤rz","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"];
    }

    valuetype GoodsId oftype text{
        constraints: [RegexGoodsId];
    }

    constraint RegexGoodsId oftype RegexConstraint{
        regex: /^NST7-[0-9A-Z]{3}$/;
    }

    // 8. Interpret a Sheet as Table
    block GoodsTransportTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "year" oftype PosInteger,
            "month" oftype GermanMonth,
            "goods_id" oftype GoodsId,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype PosInteger,
            "total" oftype PosInteger,
        ];
    }

    // 9. Loads Table into SQLite Database
    block GoodsTransportLoader oftype SQLiteLoader {
        table: "goods";
        file: "goodsTransportedByTrain.sqlite";
    }
}